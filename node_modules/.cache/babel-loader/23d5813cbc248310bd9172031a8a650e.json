{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jellybean/nextAcademy/final_project/react/homefoods/src/containers/Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport SignUp from './Signup';\nimport Login from './Login';\nimport SessionContext from '../contexts/SessionContext';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default _s(({\n  children\n}) => {\n  _s();\n\n  const [isOpen, setOpen] = useState(false);\n  const [isLoginForm, setIsLoginForm] = useState(true);\n  const [status, setStatus] = useState(\"\");\n  const [isLoggedIn, setLogin] = useState(localStorage.getItem(\"token\"));\n\n  const open = () => {\n    setOpen(true);\n  };\n\n  const close = () => {\n    setOpen(false);\n  };\n\n  const openLogin = () => {\n    setOpen(true);\n    setIsLoginForm(true);\n    setStatus(\"Login\");\n  };\n\n  const openSignUp = () => {\n    setOpen(true);\n    setIsLoginForm(false);\n    setStatus(\"Sign Up\");\n  };\n\n  const renderForm = () => {\n    if (isLoginForm) {\n      return /*#__PURE__*/_jsxDEV(Login, {\n        setLogin: setLogin,\n        setOpen: setOpen,\n        openSignUp: openSignUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(SignUp, {\n        setLogin: setLogin,\n        setOpen: setOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this);\n    }\n  };\n\n  const renderContent = () => {\n    return /*#__PURE__*/_jsxDEV(SessionContext.Provider, {\n      value: {\n        openLogin,\n        openSignUp,\n        close,\n        isLoggedIn,\n        setLogin\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: isOpen,\n        onHide: close,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 8\n        }, this), renderForm(), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: close,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this);\n  };\n\n  return renderContent();\n}, \"4n7CLW5tW4UrBDygnF8ziUgMZPg=\");","map":{"version":3,"sources":["/home/jellybean/nextAcademy/final_project/react/homefoods/src/containers/Modal.js"],"names":["React","useState","SignUp","Login","SessionContext","Button","Modal","children","isOpen","setOpen","isLoginForm","setIsLoginForm","status","setStatus","isLoggedIn","setLogin","localStorage","getItem","open","close","openLogin","openSignUp","renderForm","renderContent"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,OAAO,sCAAP;AAGA,kBAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAChC,QAAM,CAACC,MAAD,EAASC,OAAT,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,UAAD,EAAaC,QAAb,IAAyBd,QAAQ,CAACe,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAvC;;AAEA,QAAMC,IAAI,GAAG,MAAM;AAClBT,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA,GAFD;;AAKA,QAAMU,KAAK,GAAG,MAAM;AACnBV,IAAAA,OAAO,CAAC,KAAD,CAAP;AACA,GAFD;;AAIA,QAAMW,SAAS,GAAG,MAAM;AACvBX,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,IAAAA,SAAS,CAAC,OAAD,CAAT;AACA,GAJD;;AAMA,QAAMQ,UAAU,GAAG,MAAM;AACxBZ,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,IAAAA,SAAS,CAAC,SAAD,CAAT;AACA,GAJD;;AAMA,QAAMS,UAAU,GAAG,MAAM;AACxB,QAAIZ,WAAJ,EAAiB;AAChB,0BAAO,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAEK,QAAjB;AAA2B,QAAA,OAAO,EAAEN,OAApC;AAA8C,QAAA,UAAU,EAAEY;AAA1D;AAAA;AAAA;AAAA;AAAA,cAAP;AACA,KAFD,MAEO;AACN,0BAAO,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEN,QAAlB;AAA4B,QAAA,OAAO,EAAEN;AAArC;AAAA;AAAA;AAAA;AAAA,cAAP;AACA;AACD,GAND;;AAQA,QAAMc,aAAa,GAAG,MAAM;AAC3B,wBACC,QAAC,cAAD,CAAgB,QAAhB;AAAyB,MAAA,KAAK,EAAE;AAAEH,QAAAA,SAAF;AAAaC,QAAAA,UAAb;AAAyBF,QAAAA,KAAzB;AAAgCL,QAAAA,UAAhC;AAA4CC,QAAAA;AAA5C,OAAhC;AAAA,8BAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEP,MAAb;AAAqB,QAAA,MAAM,EAAEW,KAA7B;AAAA,gCAEE,QAAC,KAAD,CAAO,MAAP;AAAc,UAAA,WAAW,MAAzB;AAAA,iCACC,QAAC,KAAD,CAAO,KAAP;AAAA,sBAAcP;AAAd;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAFF,EAKGU,UAAU,EALb,eAWE,QAAC,KAAD,CAAO,MAAP;AAAA,iCACC,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,OAAO,EAAEH,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAmBEZ,QAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAuBA,GAxBD;;AA0BA,SACCgB,aAAa,EADd;AAIA,CAjED","sourcesContent":["import React, { useState } from 'react'\nimport SignUp from './Signup'\nimport Login from './Login'\nimport SessionContext from '../contexts/SessionContext'\n\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport default ({ children }) => {\n\tconst [isOpen, setOpen] = useState(false)\n\tconst [isLoginForm, setIsLoginForm] = useState(true)\n\tconst [status, setStatus] = useState(\"\")\n\tconst [isLoggedIn, setLogin] = useState(localStorage.getItem(\"token\"))\n\n\tconst open = () => {\n\t\tsetOpen(true)\n\t}\n\n\n\tconst close = () => {\n\t\tsetOpen(false)\n\t}\n\n\tconst openLogin = () => {\n\t\tsetOpen(true)\n\t\tsetIsLoginForm(true)\n\t\tsetStatus(\"Login\")\n\t}\n\n\tconst openSignUp = () => {\n\t\tsetOpen(true)\n\t\tsetIsLoginForm(false)\n\t\tsetStatus(\"Sign Up\")\n\t}\n\n\tconst renderForm = () => {\n\t\tif (isLoginForm) {\n\t\t\treturn <Login setLogin={setLogin} setOpen={setOpen}  openSignUp={openSignUp}/>\n\t\t} else {\n\t\t\treturn <SignUp setLogin={setLogin} setOpen={setOpen} />\n\t\t}\n\t}\n\n\tconst renderContent = () => {\n\t\treturn (\n\t\t\t<SessionContext.Provider value={{ openLogin, openSignUp, close, isLoggedIn, setLogin }}>\n\t\t\t\t\n\t\t\t\t\t<Modal show={isOpen} onHide={close}>\n\t\t\t\t\n\t\t\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t\t\t<Modal.Title>{status}</Modal.Title>\n\t\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t\t{renderForm()}\n\n\t\t\t\t\t\t\t{/* <Modal.Body>\n\t\t\t\t\t\t\t\t<p>Modal body text goes here.</p>\n\t\t\t\t\t\t\t</Modal.Body> */}\n\n\t\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={close}>Close</Button>\n\t\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t\n\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\n\t\t\t\t{children}\n\t\t\t</SessionContext.Provider>\n\t\t)\n\t}\n\n\treturn (\n\t\trenderContent()\n\t)\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}