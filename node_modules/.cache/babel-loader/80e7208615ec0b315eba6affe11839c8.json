{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jellybean/nextAcademy/final_project/react/homefoods/src/pages/RecipePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport SessionContext from '../contexts/SessionContext';\nimport { toast } from 'react-toastify';\nimport RecipeCard from '../components/RecipeCard';\nimport Button from 'react-bootstrap/Button';\nexport default _s(() => {\n  _s();\n\n  const API_KEY = process.env.REACT_APP_SPOON_API_KEY;\n  const {\n    isLoggedIn\n  } = useContext(SessionContext);\n  const [queryOne, setQueryOne] = useState(\"\");\n  const [isRecipes, setRecipes] = useState([]);\n\n  const getRecipes = e => {\n    if (queryOne !== \"\") {\n      axios.get(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=${API_KEY}&ingredients=${queryOne}&number=10`).then(response => {\n        console.log(response);\n        console.log(response.data);\n        setRecipes(response.data);\n      });\n    } else {\n      toast.warn('ðŸ¦„ Please fill in ingredient', {\n        position: \"top-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }\n  };\n\n  useEffect(() => {\n    getRecipes();\n  }, []);\n\n  if (!isLoggedIn || !localStorage.getItem(\"token\")) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  }\n\n  const ingredInputOne = e => {\n    setQueryOne(e.target.value);\n  };\n\n  const ingredInputTwo = e => {\n    setQueryTwo(e.target.value);\n  };\n\n  const ingredInputThree = e => {\n    setQueryThree(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Ingredient 1:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: ingredInputOne,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      onClick: getRecipes,\n      children: \"Get Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RecipeCard, {\n      isRecipes: isRecipes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}, \"SjKiNctWMlgAsXdv2q3LqxI5C8s=\"); // {\n//     isRecipes.map(recipe => (\n//         <div key={recipe.id}>\n//             <img src={recipe.image} width=\"250\" />\n//             <p>{recipe.title}</p>\n//             <button>\n//                 <Link to={{\n//                     pathname: `/recipe/${recipe.id}`,\n//                     recipe: {\n//                         id: recipe.id,\n//                         title: recipe.title,\n//                         image: recipe.image\n//                     }\n//                 }}>Get Recipe</Link>\n//             </button>\n//         </div>\n//     ))\n// }","map":{"version":3,"sources":["/home/jellybean/nextAcademy/final_project/react/homefoods/src/pages/RecipePage.js"],"names":["React","useState","useContext","useEffect","axios","Link","Redirect","useParams","SessionContext","toast","RecipeCard","Button","API_KEY","process","env","REACT_APP_SPOON_API_KEY","isLoggedIn","queryOne","setQueryOne","isRecipes","setRecipes","getRecipes","e","get","then","response","console","log","data","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","localStorage","getItem","ingredInputOne","target","value","ingredInputTwo","setQueryTwo","ingredInputThree","setQueryThree"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\n\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport SessionContext from '../contexts/SessionContext'\nimport { toast } from 'react-toastify';\n\nimport RecipeCard from '../components/RecipeCard';\n\nimport Button from 'react-bootstrap/Button'\n\n\nexport default () => {\n    const API_KEY = process.env.REACT_APP_SPOON_API_KEY\n    const { isLoggedIn } = useContext(SessionContext)\n\n    const [queryOne, setQueryOne] = useState(\"\")\n\n    const [isRecipes, setRecipes] = useState([])\n\n\n\n\n    const getRecipes = (e) => {\n        if (queryOne !== \"\") {\n            axios.get(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=${API_KEY}&ingredients=${queryOne}&number=10`)\n                .then(response => {\n                    console.log(response)\n                    console.log(response.data)\n                    setRecipes(response.data)\n                })\n        } else {\n            toast.warn('ðŸ¦„ Please fill in ingredient', {\n                position: \"top-left\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                });\n        }\n    }\n\n    useEffect(() => {\n        getRecipes()\n    }, [])\n\n\n    if (!isLoggedIn || !localStorage.getItem(\"token\")) {\n        return <Redirect to=\"/\" />\n    }\n\n    const ingredInputOne = (e) => {\n        setQueryOne(e.target.value)\n    }\n\n    const ingredInputTwo = (e) => {\n        setQueryTwo(e.target.value)\n    }\n\n    const ingredInputThree = (e) => {\n        setQueryThree(e.target.value)\n    }\n\n    return (\n        <>\n            \n            \n            <label>Ingredient 1:</label>\n            <input onChange={ingredInputOne} type=\"text\" />\n    \n            <br />\n            <Button variant=\"success\" onClick={getRecipes}>Get Search</Button>\n\n            <RecipeCard isRecipes={isRecipes} />\n\n          \n        </>\n    )\n}\n\n\n// {\n//     isRecipes.map(recipe => (\n//         <div key={recipe.id}>\n//             <img src={recipe.image} width=\"250\" />\n//             <p>{recipe.title}</p>\n//             <button>\n//                 <Link to={{\n//                     pathname: `/recipe/${recipe.id}`,\n//                     recipe: {\n//                         id: recipe.id,\n//                         title: recipe.title,\n//                         image: recipe.image\n//                     }\n//                 }}>Get Recipe</Link>\n//             </button>\n//         </div>\n//     ))\n// }"]},"metadata":{},"sourceType":"module"}