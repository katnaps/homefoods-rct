{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jellybean/nextAcademy/final_project/react/homefoods/src/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport WebContent from '../containers/WebContent';\nimport axios from 'axios';\nimport Alert from '../components/Alert';\nimport { Link } from 'react-router-dom';\nimport Recipe from './Recipe';\nexport default _s(() => {\n  _s();\n\n  const API_KEY = process.env.REACT_APP_SPOON_API_KEY;\n  const [queryOne, setQueryOne] = useState(\"\");\n  const [queryTwo, setQueryTwo] = useState(\"\");\n  const [queryThree, setQueryThree] = useState(\"\");\n  const [isRecipes, setRecipes] = useState([]);\n  const [alert, setAlert] = useState(\"\"); // const getRecipesThree = (e) => {\n  //     if(queryOne !==\"\" && queryTwo !==\"\" && queryThree !==\"\") {\n  //         axios.get(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=${API_KEY}&ingredients=${queryOne},+${queryTwo},+${queryThree}&number=10`)\n  //             .then(response => {\n  //                 console.log(response.data)\n  //                 setRecipes(response.data)\n  //             })\n  //     } else {\n  //         setAlert(\"Please fill in ingredients\")\n  //     }\n  // }\n\n  const getRecipes = e => {\n    if (queryOne !== \"\") {\n      axios.get(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=${API_KEY}&ingredients=${queryOne}&number=10`).then(response => {\n        console.log(response.data);\n        setRecipes(response.data);\n      });\n    } else {\n      setAlert(\"Please fill in ingredients\");\n    }\n  };\n\n  const ingredInputOne = e => {\n    setQueryOne(e.target.value);\n  };\n\n  const ingredInputTwo = e => {\n    setQueryTwo(e.target.value);\n  };\n\n  const ingredInputThree = e => {\n    setQueryThree(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(WebContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), alert !== \"\" && /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Ingredient 1:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: ingredInputOne,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getRecipes,\n      children: \"Get Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), isRecipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: recipe.image,\n        width: \"200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recipe.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: `/recipe/${recipe.id}`\n          },\n          children: \"Get Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this)]\n    }, recipe.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true);\n}, \"9hzC3fMpXtYbKcgZrPtEnWL/IFo=\");","map":{"version":3,"sources":["/home/jellybean/nextAcademy/final_project/react/homefoods/src/pages/HomePage.js"],"names":["React","useState","WebContent","axios","Alert","Link","Recipe","API_KEY","process","env","REACT_APP_SPOON_API_KEY","queryOne","setQueryOne","queryTwo","setQueryTwo","queryThree","setQueryThree","isRecipes","setRecipes","alert","setAlert","getRecipes","e","get","then","response","console","log","data","ingredInputOne","target","value","ingredInputTwo","ingredInputThree","map","recipe","image","title","pathname","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport WebContent from '../containers/WebContent'\nimport axios from 'axios'\nimport Alert from '../components/Alert'\nimport { Link } from 'react-router-dom';\nimport Recipe from './Recipe';\n\nexport default () => {\n    const API_KEY = process.env.REACT_APP_SPOON_API_KEY\n    const [queryOne, setQueryOne] = useState(\"\")\n    const [queryTwo, setQueryTwo] = useState(\"\")\n    const [queryThree, setQueryThree] = useState(\"\")\n    const [isRecipes, setRecipes] = useState([])\n    const [alert, setAlert] = useState(\"\")\n\n    // const getRecipesThree = (e) => {\n    //     if(queryOne !==\"\" && queryTwo !==\"\" && queryThree !==\"\") {\n    //         axios.get(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=${API_KEY}&ingredients=${queryOne},+${queryTwo},+${queryThree}&number=10`)\n    //             .then(response => {\n    //                 console.log(response.data)\n    //                 setRecipes(response.data)\n    //             })\n    //     } else {\n    //         setAlert(\"Please fill in ingredients\")\n    //     }\n    // }\n\n    const getRecipes = (e) => {\n        if(queryOne !==\"\") {\n            axios.get(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=${API_KEY}&ingredients=${queryOne}&number=10`)\n                .then(response => {\n                    console.log(response.data)\n                    setRecipes(response.data)\n                })\n        } else {\n            setAlert(\"Please fill in ingredients\")\n        }\n    }\n\n    const ingredInputOne = (e) => {\n        setQueryOne(e.target.value)\n    }\n\n    const ingredInputTwo = (e) => {\n        setQueryTwo(e.target.value)\n    }\n\n    const ingredInputThree = (e) => {\n        setQueryThree(e.target.value)\n    }\n\n\n    return (\n        <>\n            <WebContent />\n            {alert !==\"\"&& <Alert alert={alert}/>}\n            <label>Ingredient 1:</label>\n            <input onChange={ingredInputOne} type=\"text\" />\n            {/* <br />\n            <label>Ingredient 2:</label>\n            <input onChange={ingredInputTwo} type=\"text\" />\n            <br />\n            <label>Ingredient 3:</label>\n            <input onChange={ingredInputThree} type=\"text\" /> */}\n            <br />\n            <button onClick={getRecipes}>Get Search</button>\n            {\n                isRecipes.map(recipe => (\n                    <div key={recipe.id}>\n                        <img src={recipe.image} width=\"200\" />\n                        <p>{recipe.title}</p>\n                        <button>\n                            <Link to={{pathname: `/recipe/${recipe.id}`}}>Get Recipe</Link>\n                        </button>\n                    </div>\n                ))\n            }\n\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}