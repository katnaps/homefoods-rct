{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jellybean/nextAcademy/final_project/react/homefoods/src/pages/RecipePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport SessionContext from '../contexts/SessionContext';\nimport { toast } from 'react-toastify';\nimport RecipeCard from '../components/RecipeCard';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport SearchContext from '../contexts/SearchContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default _s(() => {\n  _s();\n\n  const API_KEY = process.env.REACT_APP_SPOON_API_KEY;\n  const {\n    isLoggedIn\n  } = useContext(SessionContext); // const {searchResult} = useContext(SearchContext)\n\n  const [searchResult, setSearchResult] = useState(\"\");\n  const [isRecipes, setRecipes] = useState([]);\n  const [count, setCount] = useState(\"10\");\n\n  const getRecipes = e => {\n    e.preventDefault();\n\n    if (searchResult !== \"\") {\n      axios.get(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=${API_KEY}&ingredients=${searchResult}&number=${count}`).then(response => {\n        console.log(response);\n        console.log(response.data);\n        setRecipes(response.data);\n      });\n    } else {\n      toast.warn('Please fill in ingredient', {\n        position: \"top-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }\n  }; // useEffect(() => {\n  //     getRecipes()\n  // }, [])\n\n\n  if (!isLoggedIn || !localStorage.getItem(\"token\")) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this);\n  }\n\n  const moreSearch = e => {\n    count = +5;\n    setCount(count);\n    axios.get(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=${API_KEY}&ingredients=${searchResult}&number=${count}`).then(response => {\n      console.log(response);\n      console.log(response.data);\n      setRecipes(response.data);\n    });\n  };\n\n  const handleSearch = e => {\n    setSearchResult(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: getRecipes,\n      children: /*#__PURE__*/_jsxDEV(InputGroup, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"text-center\",\n          onChange: handleSearch,\n          placeholder: \"Input Ingredient\",\n          \"aria-label\": \"Input Ingredient\",\n          \"aria-describedby\": \"basic-addon2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            type: \"submit\",\n            children: \"Look up recipe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: moreSearch,\n      children: \"More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RecipeCard, {\n      isRecipes: isRecipes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}, \"CPBdbxZ8S5Vygg5JhMQfE1hVO0k=\"); // <input onChange={handleSearch} type=\"text\" />\n// <br />\n// <Button variant=\"success\" onClick={getRecipes}>Get Search</Button>\n// {\n//     isRecipes.map(recipe => (\n//         <div key={recipe.id}>\n//             <img src={recipe.image} width=\"250\" />\n//             <p>{recipe.title}</p>\n//             <button>\n//                 <Link to={{\n//                     pathname: `/recipe/${recipe.id}`,\n//                     recipe: {\n//                         id: recipe.id,\n//                         title: recipe.title,\n//                         image: recipe.image\n//                     }\n//                 }}>Get Recipe</Link>\n//             </button>\n//         </div>\n//     ))\n// }","map":{"version":3,"sources":["/home/jellybean/nextAcademy/final_project/react/homefoods/src/pages/RecipePage.js"],"names":["React","useState","useContext","useEffect","axios","Link","Redirect","useParams","SessionContext","toast","RecipeCard","Button","InputGroup","Container","Form","FormControl","SearchContext","API_KEY","process","env","REACT_APP_SPOON_API_KEY","isLoggedIn","searchResult","setSearchResult","isRecipes","setRecipes","count","setCount","getRecipes","e","preventDefault","get","then","response","console","log","data","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","localStorage","getItem","moreSearch","handleSearch","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,SAAzB,QAA0C,kBAA1C;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AAEA,OAAOC,aAAP,MAA0B,2BAA1B;AAEA,OAAO,sCAAP;AAIA,kBAAe,MAAM;AAAA;;AACjB,QAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,uBAA5B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAiBnB,UAAU,CAACM,cAAD,CAAjC,CAFiB,CAIjB;;AAGA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM,CAACuB,SAAD,EAAYC,UAAZ,IAA0BxB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACyB,KAAD,EAAQC,QAAR,IAAoB1B,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAM2B,UAAU,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIR,YAAY,KAAK,EAArB,EAAyB;AACrBlB,MAAAA,KAAK,CAAC2B,GAAN,CAAW,gEAA+Dd,OAAQ,gBAAeK,YAAa,WAAUI,KAAM,EAA9H,EACKM,IADL,CACUC,QAAQ,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAX,QAAAA,UAAU,CAACQ,QAAQ,CAACG,IAAV,CAAV;AACH,OALL;AAMH,KAPD,MAOO;AACH3B,MAAAA,KAAK,CAAC4B,IAAN,CAAW,2BAAX,EAAwC;AACpCC,QAAAA,QAAQ,EAAE,UAD0B;AAEpCC,QAAAA,SAAS,EAAE,IAFyB;AAGpCC,QAAAA,eAAe,EAAE,KAHmB;AAIpCC,QAAAA,YAAY,EAAE,IAJsB;AAKpCC,QAAAA,YAAY,EAAE,IALsB;AAMpCC,QAAAA,SAAS,EAAE,IANyB;AAOpCC,QAAAA,QAAQ,EAAEC;AAP0B,OAAxC;AASH;AACJ,GApBD,CAbiB,CAmCjB;AACA;AACA;;;AAGA,MAAI,CAACxB,UAAD,IAAe,CAACyB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB,EAAmD;AAC/C,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,QAAMC,UAAU,GAAInB,CAAD,IAAO;AACtBH,IAAAA,KAAK,GAAE,CAAE,CAAT;AACAC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAtB,IAAAA,KAAK,CAAC2B,GAAN,CAAW,gEAA+Dd,OAAQ,gBAAeK,YAAa,WAAUI,KAAM,EAA9H,EACKM,IADL,CACUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAX,MAAAA,UAAU,CAACQ,QAAQ,CAACG,IAAV,CAAV;AACH,KALL;AAOH,GAVD;;AAYA,QAAMa,YAAY,GAAIpB,CAAD,IAAO;AACxBN,IAAAA,eAAe,CAACM,CAAC,CAACqB,MAAF,CAASC,KAAV,CAAf;AACH,GAFD;;AAKA,sBACI,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEvB,UAAhB;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA,gCACI,QAAC,WAAD;AACI,UAAA,SAAS,EAAC,aADd;AAEI,UAAA,QAAQ,EAAEqB,YAFd;AAGI,UAAA,WAAW,EAAC,kBAHhB;AAII,wBAAW,kBAJf;AAKI,8BAAiB;AALrB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI,QAAC,UAAD,CAAY,MAAZ;AAAA,iCACI,QAAC,MAAD;AACI,YAAA,OAAO,EAAC,SADZ;AAEI,YAAA,IAAI,EAAC,QAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAoBI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAED,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ,eAqBI,QAAC,UAAD;AAAY,MAAA,SAAS,EAAExB;AAAvB;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAtFD,kC,CA0FA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\n\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport SessionContext from '../contexts/SessionContext'\nimport { toast } from 'react-toastify';\n\nimport RecipeCard from '../components/RecipeCard';\n\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\n\nimport SearchContext from '../contexts/SearchContext';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nexport default () => {\n    const API_KEY = process.env.REACT_APP_SPOON_API_KEY\n    const { isLoggedIn } = useContext(SessionContext)\n\n    // const {searchResult} = useContext(SearchContext)\n\n\n    const [searchResult, setSearchResult] = useState(\"\")\n\n    const [isRecipes, setRecipes] = useState([])\n\n    const [count, setCount] = useState(\"10\")\n\n    const getRecipes = (e) => {\n        e.preventDefault()\n        if (searchResult !== \"\") {\n            axios.get(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=${API_KEY}&ingredients=${searchResult}&number=${count}`)\n                .then(response => {\n                    console.log(response)\n                    console.log(response.data)\n                    setRecipes(response.data)\n                })\n        } else {\n            toast.warn('Please fill in ingredient', {\n                position: \"top-left\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n        }\n    }\n\n    // useEffect(() => {\n    //     getRecipes()\n    // }, [])\n\n\n    if (!isLoggedIn || !localStorage.getItem(\"token\")) {\n        return <Redirect to=\"/\" />\n    }\n\n    const moreSearch = (e) => {\n        count =+ 5\n        setCount(count)\n        axios.get(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=${API_KEY}&ingredients=${searchResult}&number=${count}`)\n            .then(response => {\n                console.log(response)\n                console.log(response.data)\n                setRecipes(response.data)\n            })\n            \n    }\n\n    const handleSearch = (e) => {\n        setSearchResult(e.target.value)\n    }\n\n\n    return (\n        <Container className=\"mt-4\">\n            <Form onSubmit={getRecipes}>\n                <InputGroup className=\"mb-3\">\n                    <FormControl\n                        className=\"text-center\"\n                        onChange={handleSearch}\n                        placeholder=\"Input Ingredient\"\n                        aria-label=\"Input Ingredient\"\n                        aria-describedby=\"basic-addon2\"\n                    />\n                    <InputGroup.Append>\n                        <Button\n                            variant=\"success\"\n                            type=\"submit\"\n                        >\n                            Look up recipe\n                    </Button>\n                    </InputGroup.Append>\n                </InputGroup>\n            </Form>\n            <Button onClick={moreSearch}>More</Button>\n            <RecipeCard isRecipes={isRecipes} />\n        </Container>\n    )\n}\n\n\n\n// <input onChange={handleSearch} type=\"text\" />\n\n// <br />\n// <Button variant=\"success\" onClick={getRecipes}>Get Search</Button>\n\n\n\n\n// {\n//     isRecipes.map(recipe => (\n//         <div key={recipe.id}>\n//             <img src={recipe.image} width=\"250\" />\n//             <p>{recipe.title}</p>\n//             <button>\n//                 <Link to={{\n//                     pathname: `/recipe/${recipe.id}`,\n//                     recipe: {\n//                         id: recipe.id,\n//                         title: recipe.title,\n//                         image: recipe.image\n//                     }\n//                 }}>Get Recipe</Link>\n//             </button>\n//         </div>\n//     ))\n// }"]},"metadata":{},"sourceType":"module"}