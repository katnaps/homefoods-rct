{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jellybean/nextAcademy/final_project/react/homefoods/src/pages/UserProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useParams, Redirect } from \"react-router-dom\";\nimport axios from 'axios';\nimport SessionContext from '../contexts/SessionContext';\nimport Image from 'react-bootstrap/Image';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default _s(() => {\n  _s();\n\n  const {\n    isLoggedIn\n  } = useContext(SessionContext);\n  const {\n    id\n  } = useParams();\n  const [user, setUser] = useState({});\n  const [profileImg, setProfileImg] = useState(null); // new code below\n\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [old_password, setOldPassword] = useState('');\n  const [password, setPassword] = useState(''); // to get user's profile image\n\n  useEffect(() => {\n    axios.get(\"https://homefoods1.herokuapp.com/api/v1/users/me\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    }).then(response => {\n      console.log(response);\n      setUser({ ...response.data,\n        profileImage: response.data.image_path\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [id, user.image_path]);\n\n  if (!isLoggedIn || id === \"me\" && !localStorage.getItem(\"token\")) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  } // just keep the comment, so we cna refer later lol\n  // this part is to update profile image picture\n\n\n  const uploadImages = e => {\n    e.preventDefault();\n    const fileInput = e.target;\n    const formData = new FormData();\n    formData.append(\"image\", profileImg);\n    axios.post(\"https://homefoods1.herokuapp.com/api/v1/images/\", formData, {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    }).then(uploadImg => {\n      fileInput.value = null;\n      const userCopy = { ...user\n      };\n      setUser({});\n      setUser(userCopy);\n      console.log(uploadImg);\n    });\n  }; // this part to update profile details (this part is not working properly)\n  // its tell me the token is incorrect\n\n\n  const updateInfo = e => {\n    e.preventDefault();\n    axios.post(`https://homefoods1.herokuapp.com/api/v1/users/${id}`, {\n      username,\n      email,\n      old_password,\n      password\n    }, {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    }).then(response => {\n      console.log(response);\n      localStorage.setItem(\"token\", response.data.token);\n      const userCopy = { ...user\n      };\n      setUser({});\n      setUser(userCopy);\n    });\n  };\n\n  const handleFileChange = e => {\n    setProfileImg(e.target.files[0]);\n  };\n\n  const handleUsername = e => {\n    setUsername(e.target.value);\n  };\n\n  const handleEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const handleOldPassword = e => {\n    setOldPassword(e.target.value);\n  };\n\n  const handlePassword = e => {\n    setPassword(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: user.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n          className: \"bg-dark mt-4 text-light\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Image, {\n            src: user.profileImage,\n            fluid: true,\n            className: \" rounded d-block mx-auto mt-3 mb-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Username: \", user.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: uploadImages,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: updateInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: username,\n              placeholder: user.username,\n              type: \"text\",\n              onChange: handleUsername\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: email,\n              placeholder: user.email,\n              type: \"email\",\n              onChange: handleEmail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: old_password,\n              placeholder: \"Old password\",\n              type: \"password\",\n              onChange: handleOldPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: password,\n              placeholder: \"New password\",\n              type: \"password\",\n              onChange: handlePassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }, this)\n    }, void 0, false) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}, \"+urG1qQqxRg3bztzvoH1RypyyAg=\", false, function () {\n  return [useParams];\n});","map":{"version":3,"sources":["/home/jellybean/nextAcademy/final_project/react/homefoods/src/pages/UserProfile.js"],"names":["React","useState","useEffect","useContext","useParams","Redirect","axios","SessionContext","Image","Jumbotron","Button","Container","isLoggedIn","id","user","setUser","profileImg","setProfileImg","username","setUsername","email","setEmail","old_password","setOldPassword","password","setPassword","get","headers","Authorization","localStorage","getItem","then","response","console","log","data","profileImage","image_path","catch","error","uploadImages","e","preventDefault","fileInput","target","formData","FormData","append","post","uploadImg","value","userCopy","updateInfo","setItem","token","handleFileChange","files","handleUsername","handleEmail","handleOldPassword","handlePassword","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { useParams, Redirect } from \"react-router-dom\";\nimport axios from 'axios';\nimport SessionContext from '../contexts/SessionContext'\n\nimport Image from 'react-bootstrap/Image'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\n\nimport Container from 'react-bootstrap/Container'\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport default () => {\n    const { isLoggedIn } = useContext(SessionContext)\n    const { id } = useParams()\n    const [user, setUser] = useState({})\n    const [profileImg, setProfileImg] = useState(null)\n    // new code below\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [old_password, setOldPassword] = useState('')\n    const [password, setPassword] = useState('')\n\n    // to get user's profile image\n    useEffect(() => {\n        axios.get(\"https://homefoods1.herokuapp.com/api/v1/users/me\", {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n            }\n        })\n            .then(response => {\n                console.log(response)\n                setUser({\n                    ...response.data,\n                    profileImage: response.data.image_path\n                })\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }, [id, user.image_path])\n\n    if (!isLoggedIn || (id === \"me\" && !localStorage.getItem(\"token\"))) {\n        return <Redirect to=\"/\" />\n    }\n    // just keep the comment, so we cna refer later lol\n    // this part is to update profile image picture\n    const uploadImages = (e) => {\n        e.preventDefault();\n        const fileInput = e.target\n        const formData = new FormData()\n        formData.append(\"image\", profileImg)\n        axios.post(\"https://homefoods1.herokuapp.com/api/v1/images/\", formData, {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n            }\n        })\n            .then((uploadImg) => {\n                fileInput.value = null\n                const userCopy = { ...user }\n                setUser({})\n                setUser(userCopy)\n                console.log(uploadImg)\n            })\n    }\n\n\n    // this part to update profile details (this part is not working properly)\n    // its tell me the token is incorrect\n    const updateInfo = (e) => {\n        e.preventDefault();\n\n        axios.post(`https://homefoods1.herokuapp.com/api/v1/users/${id}`, {\n            username,\n            email,\n            old_password,\n            password\n        },\n            {\n                headers: {\n                    Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n                },\n\n            })\n            .then(response => {\n                console.log(response)\n                localStorage.setItem(\"token\", response.data.token)\n                const userCopy = { ...user }\n                setUser({})\n                setUser(userCopy)\n            })\n    }\n\n    const handleFileChange = (e) => {\n        setProfileImg(e.target.files[0])\n    }\n\n    const handleUsername = e => {\n        setUsername(e.target.value)\n    }\n\n    const handleEmail = e => {\n        setEmail(e.target.value)\n    }\n\n    const handleOldPassword = e => {\n        setOldPassword(e.target.value)\n    }\n\n    const handlePassword = e => {\n        setPassword(e.target.value)\n    }\n\n    return (\n        <div>\n            {\n                user.id ?\n                    <>\n                        <Container className=\"mt-4\">\n                            <Jumbotron className=\"bg-dark mt-4 text-light\">\n                                <h1>{title}</h1>\n                                <Image src={user.profileImage} fluid className=\" rounded d-block mx-auto mt-3 mb-3\" />\n                                <h3>\n                                    Username: {user.username}\n                                </h3>\n                            </Jumbotron>\n\n                            <div>\n                                <form onSubmit={uploadImages}>\n                                    <input type=\"file\" onChange={handleFileChange} />\n                                    <button type=\"submit\">Upload</button>\n                                </form>\n                            </div>\n                            <div>\n                                <form onSubmit={updateInfo}>\n                                    <input value={username} placeholder={user.username} type=\"text\" onChange={handleUsername} />\n                                    <input value={email} placeholder={user.email} type=\"email\" onChange={handleEmail} />\n                                    <input value={old_password} placeholder=\"Old password\" type=\"password\" onChange={handleOldPassword} />\n                                    <input value={password} placeholder=\"New password\" type=\"password\" onChange={handlePassword} />\n                                    <button type=\"submit\">Update</button>\n                                </form>\n                            </div>\n                        </Container>\n                    </> :\n                    null\n            }\n        </div>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}