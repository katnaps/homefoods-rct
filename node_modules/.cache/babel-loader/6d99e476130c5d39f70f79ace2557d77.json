{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jellybean/nextAcademy/final_project/react/homefoods/src/pages/RecipePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport Alert from '../components/Alert';\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport SessionContext from '../contexts/SessionContext';\nimport RecipeCard from '../components/RecipeCard';\nexport default _s(() => {\n  _s();\n\n  const API_KEY = process.env.REACT_APP_SPOON_API_KEY;\n  const {\n    isLoggedIn\n  } = useContext(SessionContext);\n  const {\n    id\n  } = useParams();\n  const [queryOne, setQueryOne] = useState(\"\");\n  const [queryTwo, setQueryTwo] = useState(\"\");\n  const [queryThree, setQueryThree] = useState(\"\");\n  const [isRecipes, setRecipes] = useState([]);\n  const [alert, setAlert] = useState(\"\");\n\n  const getRecipes = e => {\n    if (queryOne !== \"\") {\n      axios.get(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=${API_KEY}&ingredients=${queryOne}&number=10`).then(response => {\n        console.log(response);\n        console.log(response.data);\n        setRecipes(response.data);\n      });\n    } else {\n      setAlert(\"Please fill in ingredients\");\n    }\n  };\n\n  useEffect(() => {\n    getRecipes();\n  }, []);\n\n  if (!isLoggedIn || id === \"me\" && !localStorage.getItem(\"token\")) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n\n  const ingredInputOne = e => {\n    setQueryOne(e.target.value);\n  };\n\n  const ingredInputTwo = e => {\n    setQueryTwo(e.target.value);\n  };\n\n  const ingredInputThree = e => {\n    setQueryThree(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [alert !== \"\" && /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Ingredient 1:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: ingredInputOne,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getRecipes,\n      children: \"Get Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), isRecipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: recipe.image,\n        width: \"250\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recipe.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: `/recipe/${recipe.id}`,\n            recipe: {\n              id: recipe.id,\n              title: recipe.title,\n              image: recipe.image\n            }\n          },\n          children: \"Get Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this)]\n    }, recipe.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true);\n}, \"6RVQ9v27m0r1fJfpJ8RPuvvzsys=\", false, function () {\n  return [useParams];\n});","map":{"version":3,"sources":["/home/jellybean/nextAcademy/final_project/react/homefoods/src/pages/RecipePage.js"],"names":["React","useState","useContext","useEffect","axios","Alert","Link","Redirect","useParams","SessionContext","RecipeCard","API_KEY","process","env","REACT_APP_SPOON_API_KEY","isLoggedIn","id","queryOne","setQueryOne","queryTwo","setQueryTwo","queryThree","setQueryThree","isRecipes","setRecipes","alert","setAlert","getRecipes","e","get","then","response","console","log","data","localStorage","getItem","ingredInputOne","target","value","ingredInputTwo","ingredInputThree","map","recipe","image","title","pathname"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport Alert from '../components/Alert';\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport SessionContext from '../contexts/SessionContext'\n\nimport RecipeCard from '../components/RecipeCard';\n\nexport default () => {\n    const API_KEY = process.env.REACT_APP_SPOON_API_KEY\n    const { isLoggedIn } = useContext(SessionContext)\n    const { id } = useParams()\n    const [queryOne, setQueryOne] = useState(\"\")\n    const [queryTwo, setQueryTwo] = useState(\"\")\n    const [queryThree, setQueryThree] = useState(\"\")\n    const [isRecipes, setRecipes] = useState([])\n    const [alert, setAlert] = useState(\"\")\n\n\n\n    const getRecipes = (e) => {\n        if (queryOne !== \"\") {\n            axios.get(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=${API_KEY}&ingredients=${queryOne}&number=10`)\n                .then(response => {\n                    console.log(response)\n                    console.log(response.data)\n                    setRecipes(response.data)\n                })\n        } else {\n            setAlert(\"Please fill in ingredients\")\n        }\n    }\n\n    useEffect(() => {\n        getRecipes()\n    }, [])\n\n\n    if (!isLoggedIn || (id === \"me\" && !localStorage.getItem(\"token\"))) {\n        return <Redirect to=\"/\" />\n    }\n\n    const ingredInputOne = (e) => {\n        setQueryOne(e.target.value)\n    }\n\n    const ingredInputTwo = (e) => {\n        setQueryTwo(e.target.value)\n    }\n\n    const ingredInputThree = (e) => {\n        setQueryThree(e.target.value)\n    }\n\n    return (\n        <>\n\n            {alert !== \"\" && <Alert alert={alert} />}\n            <label>Ingredient 1:</label>\n            <input onChange={ingredInputOne} type=\"text\" />\n            {/* <br />\n            <label>Ingredient 2:</label>\n            <input onChange={ingredInputTwo} type=\"text\" />\n            <br />\n            <label>Ingredient 3:</label>\n            <input onChange={ingredInputThree} type=\"text\" /> */}\n            <br />\n            <button onClick={getRecipes}>Get Search</button>\n\n            {/* <RecipeCard isRecipes={isRecipes} /> */}\n\n            {\n                isRecipes.map(recipe => (\n                    <div key={recipe.id}>\n                        <img src={recipe.image} width=\"250\" />\n                        <p>{recipe.title}</p>\n                        <button>\n                            <Link to={{\n                                pathname: `/recipe/${recipe.id}`,\n                                recipe: {\n                                    id: recipe.id,\n                                    title: recipe.title,\n                                    image: recipe.image\n                                }\n                            }}>Get Recipe</Link>\n                        </button>\n                    </div>\n                ))\n            }\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}