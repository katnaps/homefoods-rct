{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jellybean/nextAcademy/final_project/react/homefoods/src/containers/Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport SignUp from './Signup.js';\nimport Login from './Login.js';\nimport SessionContext from '../contexts/SessionContext.js';\nconst modalStyle = {\n  height: \"80vh\",\n  width: \"80vh\",\n  border: \"1px solid black\",\n  backgroundColor: \"white\",\n  position: \"absolute\"\n};\nconst modalContainerStyle = {\n  display: \"flex\",\n  justifyContent: \"center\"\n};\nexport default _s(({\n  children\n}) => {\n  _s();\n\n  const [isOpen, setOpen] = useState(false);\n  const [isLoginForm, setIsLoginForm] = useState(true);\n  const [isLoggedIn, setLogin] = useState(localStorage.getItem(\"token\"));\n\n  const open = () => {\n    setOpen(true);\n  };\n\n  const close = () => {\n    setOpen(false);\n  };\n\n  const openLogin = () => {\n    setOpen(true);\n    setIsLoginForm(true);\n  };\n\n  const openSignUp = () => {\n    setOpen(true);\n    setIsLoginForm(false);\n  };\n\n  const renderForm = () => {\n    if (isLoginForm) {\n      return /*#__PURE__*/_jsxDEV(Login, {\n        setLogin: setLogin,\n        setOpen: setOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(SignUp, {\n        setLogin: setLogin,\n        setOpen: setOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  const renderContent = () => {\n    return /*#__PURE__*/_jsxDEV(SessionContext.Provider, {\n      value: {\n        openLogin,\n        openSignUp,\n        close,\n        isLoggedIn,\n        setLogin\n      },\n      children: [isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalContainerStyle,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          children: [renderForm(), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => close(),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }, this) : null, children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this);\n  };\n\n  return renderContent();\n}, \"4ZwLioMxvMDlO/SjWvWvdPo55uk=\");","map":{"version":3,"sources":["/home/jellybean/nextAcademy/final_project/react/homefoods/src/containers/Modal.js"],"names":["React","useState","SignUp","Login","SessionContext","modalStyle","height","width","border","backgroundColor","position","modalContainerStyle","display","justifyContent","children","isOpen","setOpen","isLoginForm","setIsLoginForm","isLoggedIn","setLogin","localStorage","getItem","open","close","openLogin","openSignUp","renderForm","renderContent"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA,MAAMC,UAAU,GAAG;AAClBC,EAAAA,MAAM,EAAE,MADU;AAElBC,EAAAA,KAAK,EAAE,MAFW;AAGlBC,EAAAA,MAAM,EAAE,iBAHU;AAIlBC,EAAAA,eAAe,EAAE,OAJC;AAKlBC,EAAAA,QAAQ,EAAE;AALQ,CAAnB;AAQA,MAAMC,mBAAmB,GAAG;AAC3BC,EAAAA,OAAO,EAAE,MADkB;AAE3BC,EAAAA,cAAc,EAAE;AAFW,CAA5B;AAMA,kBAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC7B,QAAM,CAACC,MAAD,EAASC,OAAT,IAAoBf,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACkB,UAAD,EAAaC,QAAb,IAAyBnB,QAAQ,CAACoB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAvC;;AAEA,QAAMC,IAAI,GAAG,MAAM;AACfP,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAKH,QAAMQ,KAAK,GAAG,MAAM;AACnBR,IAAAA,OAAO,CAAC,KAAD,CAAP;AACA,GAFD;;AAIA,QAAMS,SAAS,GAAG,MAAM;AACvBT,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,IAAAA,cAAc,CAAC,IAAD,CAAd;AACA,GAHD;;AAKA,QAAMQ,UAAU,GAAG,MAAM;AACxBV,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,IAAAA,cAAc,CAAC,KAAD,CAAd;AACG,GAHJ;;AAKG,QAAMS,UAAU,GAAG,MAAM;AACrB,QAAIV,WAAJ,EAAiB;AACb,0BAAO,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAEG,QAAjB;AAA2B,QAAA,OAAO,EAAEJ;AAApC;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO;AACH,0BAAO,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEI,QAAlB;AAA4B,QAAA,OAAO,EAAEJ;AAArC;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ,GAND;;AAQA,QAAMY,aAAa,GAAG,MAAM;AAC9B,wBACC,QAAC,cAAD,CAAgB,QAAhB;AAAyB,MAAA,KAAK,EAAE;AAACH,QAAAA,SAAD;AAAYC,QAAAA,UAAZ;AAAwBF,QAAAA,KAAxB;AAA+BL,QAAAA,UAA/B;AAA2CC,QAAAA;AAA3C,OAAhC;AAAA,iBAEEL,MAAM,gBACN;AAAK,QAAA,KAAK,EAAEJ,mBAAZ;AAAA,+BACC;AAAK,UAAA,KAAK,EAAEN,UAAZ;AAAA,qBACEsB,UAAU,EADZ,eAEC;AAAQ,YAAA,OAAO,EAAE,MAAMH,KAAK,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADM,GAON,IATF,EAWEV,QAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAeG,GAhBD;;AAkBA,SACIc,aAAa,EADjB;AAIH,CAtDD","sourcesContent":["import React, {useState} from 'react'\nimport SignUp from './Signup.js'\nimport Login from './Login.js'\nimport SessionContext from '../contexts/SessionContext.js'\n\nconst modalStyle = {\n\theight: \"80vh\",\n\twidth: \"80vh\",\n\tborder: \"1px solid black\",\n\tbackgroundColor: \"white\",\n\tposition: \"absolute\"\n}\n\nconst modalContainerStyle = {\n\tdisplay: \"flex\",\n\tjustifyContent: \"center\"\n}\n\n\nexport default ({ children }) => {\n    const [isOpen, setOpen] = useState(false)\n    const [isLoginForm, setIsLoginForm] = useState(true)\n    const [isLoggedIn, setLogin] = useState(localStorage.getItem(\"token\"))\n\n    const open = () => {\n        setOpen(true)\n    }\n\n\n\tconst close = () => {\n\t\tsetOpen(false)\n\t}\n\n\tconst openLogin = () => {\n\t\tsetOpen(true)\n\t\tsetIsLoginForm(true)\n\t}\n\n\tconst openSignUp = () => {\n\t\tsetOpen(true)\n\t\tsetIsLoginForm(false)\n    }\n    \n    const renderForm = () => {\n        if (isLoginForm) {\n            return <Login setLogin={setLogin} setOpen={setOpen} />\n        } else {\n            return <SignUp setLogin={setLogin} setOpen={setOpen} />\n        }\n    }\n\n    const renderContent = () => {\n\t\treturn (\n\t\t\t<SessionContext.Provider value={{openLogin, openSignUp, close, isLoggedIn, setLogin}}>\n\t\t\t\t{\n\t\t\t\t\tisOpen ?\n\t\t\t\t\t<div style={modalContainerStyle}>\n\t\t\t\t\t\t<div style={modalStyle}>\n\t\t\t\t\t\t\t{renderForm()}\n\t\t\t\t\t\t\t<button onClick={() => close()}>X</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div> :\n\t\t\t\t\tnull\n\t\t\t\t}\n\t\t\t\t{children}\n\t\t\t</SessionContext.Provider>\n\t\t)\n    }\n    \n    return (\n        renderContent()\n    )\n\n}"]},"metadata":{},"sourceType":"module"}