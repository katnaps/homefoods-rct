{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jellybean/nextAcademy/final_project/react/homefoods/src/pages/RecipePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport SessionContext from '../contexts/SessionContext';\nimport { toast } from 'react-toastify';\nimport RecipeCard from '../components/RecipeCard';\nimport Button from 'react-bootstrap/Button';\nimport SearchContext from '../contexts/SearchContext';\nexport default _s(({\n  isRecipes,\n  getRecipes\n}) => {\n  _s();\n\n  const API_KEY = process.env.REACT_APP_SPOON_API_KEY;\n  const {\n    isLoggedIn\n  } = useContext(SessionContext); // const [queryOne, setQueryOne] = useState(\"\")\n  // const [isRecipes, setRecipes] = useState([])\n  // const getRecipes = (e) => {\n  //     if (queryOne !== \"\") {\n  //         axios.get(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=${API_KEY}&ingredients=${queryOne}&number=10`)\n  //             .then(response => {\n  //                 console.log(response)\n  //                 console.log(response.data)\n  //                 setRecipes(response.data)\n  //             })\n  //     } else {\n  //         toast.warn('ðŸ¦„ Please fill in ingredient', {\n  //             position: \"top-left\",\n  //             autoClose: 5000,\n  //             hideProgressBar: false,\n  //             closeOnClick: true,\n  //             pauseOnHover: true,\n  //             draggable: true,\n  //             progress: undefined,\n  //             });\n  //     }\n  // }\n\n  useEffect(() => {}, []);\n\n  if (!isLoggedIn || !localStorage.getItem(\"token\")) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  } // const ingredInputOne = (e) => {\n  //     setQueryOne(e.target.value)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(RecipeCard, {\n      isRecipes: isRecipes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}, \"1AdfPsTnpvroXZRxH1KYo7Iw0fE=\"); // {\n//     isRecipes.map(recipe => (\n//         <div key={recipe.id}>\n//             <img src={recipe.image} width=\"250\" />\n//             <p>{recipe.title}</p>\n//             <button>\n//                 <Link to={{\n//                     pathname: `/recipe/${recipe.id}`,\n//                     recipe: {\n//                         id: recipe.id,\n//                         title: recipe.title,\n//                         image: recipe.image\n//                     }\n//                 }}>Get Recipe</Link>\n//             </button>\n//         </div>\n//     ))\n// }","map":{"version":3,"sources":["/home/jellybean/nextAcademy/final_project/react/homefoods/src/pages/RecipePage.js"],"names":["React","useState","useContext","useEffect","axios","Link","Redirect","useParams","SessionContext","toast","RecipeCard","Button","SearchContext","isRecipes","getRecipes","API_KEY","process","env","REACT_APP_SPOON_API_KEY","isLoggedIn","localStorage","getItem"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,SAAzB,QAA0C,kBAA1C;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AAGA,kBAAe,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,CAAD,KAA6B;AAAA;;AACxC,QAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,uBAA5B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAkBjB,UAAU,CAACM,cAAD,CAAlC,CAFwC,CAIxC;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAL,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,EADM,CAAT;;AAIA,MAAI,CAACgB,UAAD,IAAe,CAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB,EAAmD;AAC/C,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GArCuC,CAuCxC;AACA;AACA;;;AAGA,sBACI;AAAA,2BASI,QAAC,UAAD;AAAY,MAAA,SAAS,EAAER;AAAvB;AAAA;AAAA;AAAA;AAAA;AATJ,mBADJ;AAeH,CA3DD,kC,CA8DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\n\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport SessionContext from '../contexts/SessionContext'\nimport { toast } from 'react-toastify';\n\nimport RecipeCard from '../components/RecipeCard';\n\nimport Button from 'react-bootstrap/Button'\nimport SearchContext from '../contexts/SearchContext';\n\n\nexport default ({isRecipes, getRecipes}) => {\n    const API_KEY = process.env.REACT_APP_SPOON_API_KEY\n    const { isLoggedIn  } = useContext(SessionContext)\n\n    // const [queryOne, setQueryOne] = useState(\"\")\n\n    // const [isRecipes, setRecipes] = useState([])\n\n\n\n    // const getRecipes = (e) => {\n    //     if (queryOne !== \"\") {\n    //         axios.get(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=${API_KEY}&ingredients=${queryOne}&number=10`)\n    //             .then(response => {\n    //                 console.log(response)\n    //                 console.log(response.data)\n    //                 setRecipes(response.data)\n    //             })\n    //     } else {\n    //         toast.warn('ðŸ¦„ Please fill in ingredient', {\n    //             position: \"top-left\",\n    //             autoClose: 5000,\n    //             hideProgressBar: false,\n    //             closeOnClick: true,\n    //             pauseOnHover: true,\n    //             draggable: true,\n    //             progress: undefined,\n    //             });\n    //     }\n    // }\n\n    useEffect(() => {\n    }, [])\n\n\n    if (!isLoggedIn || !localStorage.getItem(\"token\")) {\n        return <Redirect to=\"/\" />\n    }\n\n    // const ingredInputOne = (e) => {\n    //     setQueryOne(e.target.value)\n    // }\n\n\n    return (\n        <>\n            \n{/*             \n            <label>Ingredient 1:</label>\n            <input onChange={ingredInputOne} type=\"text\" />\n    \n            <br />\n            <Button variant=\"success\" onClick={getRecipes}>Get Search</Button> */}\n\n            <RecipeCard isRecipes={isRecipes} />\n\n          \n        </>\n    )\n}\n\n\n// {\n//     isRecipes.map(recipe => (\n//         <div key={recipe.id}>\n//             <img src={recipe.image} width=\"250\" />\n//             <p>{recipe.title}</p>\n//             <button>\n//                 <Link to={{\n//                     pathname: `/recipe/${recipe.id}`,\n//                     recipe: {\n//                         id: recipe.id,\n//                         title: recipe.title,\n//                         image: recipe.image\n//                     }\n//                 }}>Get Recipe</Link>\n//             </button>\n//         </div>\n//     ))\n// }"]},"metadata":{},"sourceType":"module"}