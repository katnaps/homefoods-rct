{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jellybean/nextAcademy/final_project/react/homefoods/src/pages/RecipePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, Children } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport SessionContext from '../contexts/SessionContext';\nimport { toast } from 'react-toastify';\nimport RecipeCard from '../components/RecipeCard';\nimport Button from 'react-bootstrap/Button';\nexport default _s(() => {\n  _s();\n\n  const API_KEY = process.env.REACT_APP_SPOON_API_KEY;\n  const {\n    isLoggedIn\n  } = useContext(SessionContext);\n  const {\n    id\n  } = useParams();\n  const [queryOne, setQueryOne] = useState(\"\");\n  const [isRecipes, setRecipes] = useState([]);\n\n  const getRecipes = e => {\n    if (queryOne !== \"\") {\n      axios.get(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=${API_KEY}&ingredients=${queryOne}&number=10`).then(response => {\n        console.log(response);\n        console.log(response.data);\n        setRecipes(response.data);\n      });\n    } else {\n      toast.warn('ðŸ¦„ Please fill in ingredient', {\n        position: \"top-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }\n  };\n\n  useEffect(() => {\n    getRecipes();\n  }, []);\n\n  if (!isLoggedIn || id === \"me\" && !localStorage.getItem(\"token\")) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  }\n\n  const ingredInputOne = e => {\n    setQueryOne(e.target.value);\n  };\n\n  return (\n    /*#__PURE__*/\n    // /* <input onChange={ingredInputOne} type=\"text\" /> */\n    // /* <br />\n    // <br />\n    // /* <Button variant=\"success\" onClick={getRecipes}>Get Search</Button> */\n    _jsxDEV(RecipeCard, {\n      isRecipes: isRecipes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this) // /* {\n    //     isRecipes.map(recipe => (\n    //         <div key={recipe.id}>\n    //             <img src={recipe.image} width=\"250\" />\n    //             <p>{recipe.title}</p>\n    //             <button>\n    //                 <Link to={{\n    //                     pathname: `/recipe/${recipe.id}`,\n    //                     recipe: {\n    //                         id: recipe.id,\n    //                         title: recipe.title,\n    //                         image: recipe.image\n    //                     }\n    //                 }}>Get Recipe</Link>\n    //             </button>\n    //         </div>\n    //     ))\n    // } */\n\n  );\n}, \"of64pj3d3FF1bDpJPH4OUR5m/SU=\", false, function () {\n  return [useParams];\n});","map":{"version":3,"sources":["/home/jellybean/nextAcademy/final_project/react/homefoods/src/pages/RecipePage.js"],"names":["React","useState","useContext","useEffect","Children","axios","Link","Redirect","useParams","SessionContext","toast","RecipeCard","Button","API_KEY","process","env","REACT_APP_SPOON_API_KEY","isLoggedIn","id","queryOne","setQueryOne","isRecipes","setRecipes","getRecipes","e","get","then","response","console","log","data","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","localStorage","getItem","ingredInputOne","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,EAAiDC,QAAjD,QAAiE,OAAjE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,SAAzB,QAA0C,kBAA1C;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AAGA,kBAAe,MAAM;AAAA;;AACjB,QAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,uBAA5B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAiBf,UAAU,CAACO,cAAD,CAAjC;AACA,QAAM;AAAES,IAAAA;AAAF,MAASV,SAAS,EAAxB;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoB,SAAD,EAAYC,UAAZ,IAA0BrB,QAAQ,CAAC,EAAD,CAAxC;;AAKA,QAAMsB,UAAU,GAAIC,CAAD,IAAO;AACtB,QAAIL,QAAQ,KAAK,EAAjB,EAAqB;AACjBd,MAAAA,KAAK,CAACoB,GAAN,CAAW,gEAA+DZ,OAAQ,gBAAeM,QAAS,YAA1G,EACKO,IADL,CACUC,QAAQ,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAR,QAAAA,UAAU,CAACK,QAAQ,CAACG,IAAV,CAAV;AACH,OALL;AAMH,KAPD,MAOO;AACHpB,MAAAA,KAAK,CAACqB,IAAN,CAAW,8BAAX,EAA2C;AACvCC,QAAAA,QAAQ,EAAE,UAD6B;AAEvCC,QAAAA,SAAS,EAAE,IAF4B;AAGvCC,QAAAA,eAAe,EAAE,KAHsB;AAIvCC,QAAAA,YAAY,EAAE,IAJyB;AAKvCC,QAAAA,YAAY,EAAE,IALyB;AAMvCC,QAAAA,SAAS,EAAE,IAN4B;AAOvCC,QAAAA,QAAQ,EAAEC;AAP6B,OAA3C;AASH;AACJ,GAnBD;;AAqBApC,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;;AAKA,MAAI,CAACN,UAAD,IAAgBC,EAAE,KAAK,IAAP,IAAe,CAACsB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApC,EAAoE;AAChE,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,QAAMC,cAAc,GAAIlB,CAAD,IAAO;AAC1BJ,IAAAA,WAAW,CAACI,CAAC,CAACmB,MAAF,CAASC,KAAV,CAAX;AACH,GAFD;;AAMA;AAAA;AAGQ;AACA;AAEA;AACA;AAEA,YAAC,UAAD;AAAY,MAAA,SAAS,EAAEvB;AAAvB;AAAA;AAAA;AAAA;AAAA,YATR,CAWQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA5BR;AA+BH,CA7ED;AAAA,UAGmBb,SAHnB;AAAA","sourcesContent":["import React, { useState, useContext, useEffect, Children } from 'react';\nimport axios from 'axios';\n\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport SessionContext from '../contexts/SessionContext'\nimport { toast } from 'react-toastify';\n\nimport RecipeCard from '../components/RecipeCard';\n\nimport Button from 'react-bootstrap/Button'\n\n\nexport default () => {\n    const API_KEY = process.env.REACT_APP_SPOON_API_KEY\n    const { isLoggedIn } = useContext(SessionContext)\n    const { id } = useParams()\n    const [queryOne, setQueryOne] = useState(\"\")\n    const [isRecipes, setRecipes] = useState([])\n   \n\n\n\n    const getRecipes = (e) => {\n        if (queryOne !== \"\") {\n            axios.get(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=${API_KEY}&ingredients=${queryOne}&number=10`)\n                .then(response => {\n                    console.log(response)\n                    console.log(response.data)\n                    setRecipes(response.data)\n                })\n        } else {\n            toast.warn('ðŸ¦„ Please fill in ingredient', {\n                position: \"top-left\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                });\n        }\n    }\n\n    useEffect(() => {\n        getRecipes()\n    }, [])\n\n\n    if (!isLoggedIn || (id === \"me\" && !localStorage.getItem(\"token\"))) {\n        return <Redirect to=\"/\" />\n    }\n\n    const ingredInputOne = (e) => {\n        setQueryOne(e.target.value)\n    }\n\n   \n\n    return (\n            \n            \n            // /* <input onChange={ingredInputOne} type=\"text\" /> */\n            // /* <br />\n            \n            // <br />\n            // /* <Button variant=\"success\" onClick={getRecipes}>Get Search</Button> */\n\n            <RecipeCard isRecipes={isRecipes} />\n\n            // /* {\n            //     isRecipes.map(recipe => (\n            //         <div key={recipe.id}>\n            //             <img src={recipe.image} width=\"250\" />\n            //             <p>{recipe.title}</p>\n            //             <button>\n            //                 <Link to={{\n            //                     pathname: `/recipe/${recipe.id}`,\n            //                     recipe: {\n            //                         id: recipe.id,\n            //                         title: recipe.title,\n            //                         image: recipe.image\n            //                     }\n            //                 }}>Get Recipe</Link>\n            //             </button>\n            //         </div>\n            //     ))\n            // } */\n      \n    )\n}"]},"metadata":{},"sourceType":"module"}