{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jellybean/nextAcademy/final_project/react/homefoods/src/pages/RecipePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, Children } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport SessionContext from '../contexts/SessionContext';\nimport { toast } from 'react-toastify';\nimport RecipeCard from '../components/RecipeCard';\nimport Button from 'react-bootstrap/Button';\nexport default _s(({\n  children\n}) => {\n  _s();\n\n  const API_KEY = process.env.REACT_APP_SPOON_API_KEY;\n  const {\n    isLoggedIn\n  } = useContext(SessionContext);\n  const {\n    id\n  } = useParams();\n  const [queryOne, setQueryOne] = useState(\"\");\n  const [queryTwo, setQueryTwo] = useState(\"\");\n  const [queryThree, setQueryThree] = useState(\"\");\n  const [isRecipes, setRecipes] = useState([]);\n  const [alert, setAlert] = useState(\"\");\n\n  const getRecipes = e => {\n    if (queryOne !== \"\") {\n      axios.get(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=${API_KEY}&ingredients=${queryOne}&number=10`).then(response => {\n        console.log(response);\n        console.log(response.data);\n        setRecipes(response.data);\n      });\n    } else {\n      toast.warn('ðŸ¦„ Please fill in ingredient', {\n        position: \"top-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }\n  };\n\n  useEffect(() => {\n    getRecipes();\n  }, []);\n\n  if (!isLoggedIn || id === \"me\" && !localStorage.getItem(\"token\")) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n\n  const ingredInputOne = e => {\n    setQueryOne(e.target.value);\n  };\n\n  const ingredInputTwo = e => {\n    setQueryTwo(e.target.value);\n  };\n\n  const ingredInputThree = e => {\n    setQueryThree(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SessionContext.Provider, {\n    value: {\n      getRecipes,\n      ingredInputOne\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RecipeCard, {\n      isRecipes: isRecipes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 13\n  }, this);\n}, \"6RVQ9v27m0r1fJfpJ8RPuvvzsys=\", false, function () {\n  return [useParams];\n});","map":{"version":3,"sources":["/home/jellybean/nextAcademy/final_project/react/homefoods/src/pages/RecipePage.js"],"names":["React","useState","useContext","useEffect","Children","axios","Link","Redirect","useParams","SessionContext","toast","RecipeCard","Button","children","API_KEY","process","env","REACT_APP_SPOON_API_KEY","isLoggedIn","id","queryOne","setQueryOne","queryTwo","setQueryTwo","queryThree","setQueryThree","isRecipes","setRecipes","alert","setAlert","getRecipes","e","get","then","response","console","log","data","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","localStorage","getItem","ingredInputOne","target","value","ingredInputTwo","ingredInputThree"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, Children } from 'react';\nimport axios from 'axios';\n\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport SessionContext from '../contexts/SessionContext'\nimport { toast } from 'react-toastify';\n\nimport RecipeCard from '../components/RecipeCard';\n\nimport Button from 'react-bootstrap/Button'\n\n\nexport default ({children}) => {\n    const API_KEY = process.env.REACT_APP_SPOON_API_KEY\n    const { isLoggedIn } = useContext(SessionContext)\n    const { id } = useParams()\n    const [queryOne, setQueryOne] = useState(\"\")\n    const [queryTwo, setQueryTwo] = useState(\"\")\n    const [queryThree, setQueryThree] = useState(\"\")\n    const [isRecipes, setRecipes] = useState([])\n    const [alert, setAlert] = useState(\"\")\n\n\n\n    const getRecipes = (e) => {\n        if (queryOne !== \"\") {\n            axios.get(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=${API_KEY}&ingredients=${queryOne}&number=10`)\n                .then(response => {\n                    console.log(response)\n                    console.log(response.data)\n                    setRecipes(response.data)\n                })\n        } else {\n            toast.warn('ðŸ¦„ Please fill in ingredient', {\n                position: \"top-left\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                });\n        }\n    }\n\n    useEffect(() => {\n        getRecipes()\n    }, [])\n\n\n    if (!isLoggedIn || (id === \"me\" && !localStorage.getItem(\"token\"))) {\n        return <Redirect to=\"/\" />\n    }\n\n    const ingredInputOne = (e) => {\n        setQueryOne(e.target.value)\n    }\n\n    const ingredInputTwo = (e) => {\n        setQueryTwo(e.target.value)\n    }\n\n    const ingredInputThree = (e) => {\n        setQueryThree(e.target.value)\n    }\n\n    return (\n            <SessionContext.Provider value={{ getRecipes,ingredInputOne }}>\n            \n            {/* <input onChange={ingredInputOne} type=\"text\" /> */}\n            {/* <br />\n            <label>Ingredient 2:</label>\n            <input onChange={ingredInputTwo} type=\"text\" />\n            <br />\n            <label>Ingredient 3:</label>\n            <input onChange={ingredInputThree} type=\"text\" /> */}\n            <br />\n            {/* <Button variant=\"success\" onClick={getRecipes}>Get Search</Button> */}\n\n            <RecipeCard isRecipes={isRecipes} />\n\n            {/* {\n                isRecipes.map(recipe => (\n                    <div key={recipe.id}>\n                        <img src={recipe.image} width=\"250\" />\n                        <p>{recipe.title}</p>\n                        <button>\n                            <Link to={{\n                                pathname: `/recipe/${recipe.id}`,\n                                recipe: {\n                                    id: recipe.id,\n                                    title: recipe.title,\n                                    image: recipe.image\n                                }\n                            }}>Get Recipe</Link>\n                        </button>\n                    </div>\n                ))\n            } */}\n        {children}\n        </SessionContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}